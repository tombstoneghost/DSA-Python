Merge Sort
----------

The idea is to break down the array on each step and comparing it. 
After comparing and sorting, we join the elements again. 

This approach is called Divide and Conquer. 


Example:
    8 3 1 7 0 10 2
    8   3 1     7 0     10 2
    8   1 3     0 7      2 10
    8 1 3       0 7 2 10
    1 3 8       0 2 7 10
    0 1 2 3 7 8 10


Efficiency
----------

Since the number of comparisons is always one less than the length of 
array we are building. 

Therefore its Efficiency can be:
    O(N * Steps)

    Since our Steps are log(n) Therefore our Efficiency will be O(N Log(N))

The Key drawback of this algorithm is that we need to use an extra space 
since we are creating a new array. 

